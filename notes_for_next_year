# global
disable eta reduce hint before we talk about currying

# first exercise
note to students that they should submit hw as soon as possible

mention `rem` or `even` in first exercise fastPow
add examples to isEven, isOdd
Use undefined instead of holes for tasks, works better

# first hw
note to students to not use helpers!
note to students that they should not push in main
note to students to use formatter

-- remind not to push in main!!!!!!
-- use a formatter pls
-- don't always use helpers
-- remind about doing PRs as early as possible to get feedback (demonstrate feedback)
-- remind about new homework
-- look at email


# adts exercise

swap beats arguments

move cards exercises to the end, they are way more complicated than the rest!

main issue is that I've put implementation details (helper functions) first before the function they're menat to be used in
this results in extreme confusion about what functions are supposed to be doing

describe the exact constructors for CardRelation, they do not seem to be well defined otherwise...
and are also confusing

look at 02/Solutions.hs from 2022-23 for MatchCArdSuitsResult

# hof exercise
add decent example for on?




have a notes database with explanations and examples of good code practices, e.g. newtyping, records, parse don't validate


have feedback forms after every(?) exercise - try to make them concise and quick to answer


think about how to fit in "best practices" sort of deal for projects



when talking about monoids, mention thinking about "combining an entire list" (maybe even use fold/mconcat instead of (<>)??), mention they are equivalent?

TODO: examples for findFirstAndLast


homework idea:

https://www.youtube.com/watch?v=DpXy041BIlA - implement different strategies for a game



think of good example for State beforehand (example to show of how eventual state programs will look)
think of how to demo State implementations
explain more about State

move bracketState after applicative tasks!

add description for what (>>=) is supposed to do in State tasks
