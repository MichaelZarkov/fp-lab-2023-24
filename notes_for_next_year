# global

fix can flag for first homework
switch to boolean flag inside the program maybe?

increase points for partialEval? seems to be hard for people

make package names consistent in homeworks

drop bonus from second homework or improve it?

copy pretty output of cabal test to all the homeworks

warn students that homework will not be graded if they don't use the file template?

change deadlines to instead be "you'll only receive feedback before this deadline"?


snake fury? not sure why I left this note

add cabal config to produce pretty output on stdout with cabal test to all homeworks

disable eta reduce hint before we talk about currying

hspec output for GHA - https://github.com/MercuryTechnologies/hspec-formatter-github

# first exercise
note to students that they should submit hw as soon as possible

mention `rem` or `even` in first exercise fastPow
add examples to isEven, isOdd
Use undefined instead of holes for tasks, works better

# first hw
note to students to not use helpers!
note to students that they should not push in main
note to students to use formatter

-- remind not to push in main!!!!!!
-- use a formatter pls
-- don't always use helpers
-- remind about doing PRs as early as possible to get feedback (demonstrate feedback)
-- remind about new homework
-- look at email

# second hw
remove commented out matrix code at the end of the file
add tests for diagonalMatrix

```
src/Matrix.hs
76:-- TODO add example board for students to implement
99:-- TODO: mention "for all indices" interpretation
103:-- TODO: mention "for all indices" interpretation
141:-- TODO ask to reimplement better
150:-- TODO: bonus, make em figure it out

tasks/Matrix.md
16:TODO: more examples???
141:TODO: give example for Matrix - people think you can only use thrice/matrix
```


# adts exercise

swap beats arguments

move cards exercises to the end, they are way more complicated than the rest!

main issue is that I've put implementation details (helper functions) first before the function they're menat to be used in
this results in extreme confusion about what functions are supposed to be doing

describe the exact constructors for CardRelation, they do not seem to be well defined otherwise...
and are also confusing

look at 02/Solutions.hs from 2022-23 for MatchCArdSuitsResult

# hof exercise
add decent example for on?


# listmaybe exercise
add safeDiv as defintion
explain pattern matching on list literals
disable foldr and foldl hints



# lazy
consider making jos problem use list of lists instead - it's less convenient, but maybe easier to follow?


have a notes database with explanations and examples of good code practices, e.g. newtyping, records, parse don't validate


have feedback forms after every(?) exercise - try to make them concise and quick to answer


think about how to fit in "best practices" sort of deal for projects


# parser

implement sepBy live?
implement parsing a C function decl live?



when talking about monoids, mention thinking about "combining an entire list" (maybe even use fold/mconcat instead of (<>)??), mention they are equivalent?

TODO: examples for findFirstAndLast


homework idea:

https://www.youtube.com/watch?v=DpXy041BIlA - implement different strategies for a game



think of good example for State beforehand (example to show of how eventual state programs will look)
think of how to demo State implementations
explain more about State

move bracketState after applicative tasks!

add description for what (>>=) is supposed to do in State tasks
